import java.util.ArrayList;
import java.util.Scanner;

class Course {
    String courseCode;
    String title;
    String description;
    int capacity;
    int slots;
    String schedule;

    public Course(String courseCode, String title, String description, int capacity, String schedule) {
        this.courseCode = courseCode;
        this.title = title;
        this.description = description;
        this.capacity = capacity;
        this.slots = capacity;
        this.schedule = schedule;
    }

    public void showCourseDetails() {
        System.out.println("Course Code: " + courseCode);
        System.out.println("Title: " + title);
        System.out.println("Description: " + description);
        System.out.println("Capacity: " + capacity);
        System.out.println("Available Slots: " + slots);
        System.out.println("Schedule: " + schedule);
    }
}

class Student {
    int studentID;
    String name;
    ArrayList<Course> registeredCourses;

    public Student(int studentID, String name) {
        this.studentID = studentID;
        this.name = name;
        this.registeredCourses = new ArrayList<>();
    }

    public void registerCourse(Course course) {
        if (course.slots > 0) {
            registeredCourses.add(course);
            course.slots--;
            System.out.println("Registered in course: " + course.title);
        } else {
            System.out.println("No available slots for " + course.title);
        }
    }

    public void dropCourse(Course course) {
        if (registeredCourses.remove(course)) {
            course.slots++;
            System.out.println("Dropped course: " + course.title);
        } else {
            System.out.println("You are not registered in this course.");
        }
    }

    public void showRegisteredCourses() {
        System.out.println("Registered courses for " + name + ":");
        for (Course course : registeredCourses) {
            System.out.println(course.title);
        }
    }
}

public class CourseDatabaseSystem {
    static ArrayList<Course> courses = new ArrayList<>();
    static ArrayList<Student> students = new ArrayList<>();

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        courses.add(new Course("CS101", "Intro to Computer Science", "Basics of CS", 30, "Mon/Wed 10-11am"));
        courses.add(new Course("CS102", "Data Structures", "In-depth Data Structures", 25, "Tue/Thu 2-3pm"));

        students.add(new Student(1, "John Doe"));
        students.add(new Student(2, "Jane Smith"));

        boolean exit = false;

        while (!exit) {
            System.out.println("\n1. List Courses");
            System.out.println("2. Register for a Course");
            System.out.println("3. Drop a Course");
            System.out.println("4. Show Registered Courses");
            System.out.println("5. Exit");
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1: 
                    listCourses();
                    break;
                case 2: 
                    System.out.print("Enter student ID: ");
                    int studentID = scanner.nextInt();
                    Student student = findStudent(studentID);
                    if (student != null) {
                        listCourses();
                        System.out.print("Enter course code to register: ");
                        String courseCode = scanner.next();
                        Course course = findCourse(courseCode);
                        if (course != null) {
                            student.registerCourse(course);
                        } else {
                            System.out.println("Course not found.");
                        }
                    } else {
                        System.out.println("Student not found.");
                    }
                    break;
                case 3:
                    System.out.print("Enter student ID: ");
                    studentID = scanner.nextInt();
                    student = findStudent(studentID);
                    if (student != null) {
                        student.showRegisteredCourses();
                        System.out.print("Enter course code to drop: ");
                        String courseCode = scanner.next();
                        Course course = findCourse(courseCode);
                        if (course != null) {
                            student.dropCourse(course);
                        } else {
                            System.out.println("Course not found.");
                        }
                    } else {
                        System.out.println("Student not found.");
                    }
                    break;
                case 4: 
                    System.out.print("Enter student ID: ");
                    studentID = scanner.nextInt();
                    student = findStudent(studentID);
                    if (student != null) {
                        student.showRegisteredCourses();
                    } else {
                        System.out.println("Student not found.");
                    }
                    break;
                case 5: // Exit
                    exit = true;
                    break;
                default:
                    System.out.println("Invalid option.");
            }
        }
        scanner.close();
    }

    public static void listCourses() {
        for (Course course : courses) {
            course.showCourseDetails();
            System.out.println("------------------------");
        }
    }

    public static Course findCourse(String courseCode) {
        for (Course course : courses) {
            if (course.courseCode.equalsIgnoreCase(courseCode)) {
                return course;
            }
        }
        return null;
    }

    public static Student findStudent(int studentID) {
        for (Student student : students) {
            if (student.studentID == studentID) {
                return student;
            }
        }
        return null;
    }
}
